#define SONAR_NUM 4            
#define MAX_DISTANCE 150       

#define FRONT_TRIG_PIN 4
#define FRONT_ECHO_PIN 5
#define BACK_TRIG_PIN 7
#define BACK_ECHO_PIN 6
#define RIGHT_TRIG_PIN 9
#define RIGHT_ECHO_PIN 8
#define LEFT_TRIG_PIN 3
#define LEFT_ECHO_PIN 2

float ultrasonicsensor_data[SONAR_NUM];

int mode = -1; 

void setup() {
  Serial.begin(9600); 

  pinMode(FRONT_TRIG_PIN, OUTPUT);
  pinMode(BACK_TRIG_PIN, OUTPUT);
  pinMode(RIGHT_TRIG_PIN, OUTPUT);
  pinMode(LEFT_TRIG_PIN, OUTPUT);
  pinMode(FRONT_ECHO_PIN, INPUT);
  pinMode(BACK_ECHO_PIN, INPUT);
  pinMode(RIGHT_ECHO_PIN, INPUT);
  pinMode(LEFT_ECHO_PIN, INPUT);
}

void loop() {
  Robot_Mode_Define(); 
  Serial.println("Mode: " + String(mode)); 
  delay(1000); 
}

void read_ultrasonic_sensor() {
  ultrasonicsensor_data[0] = readUltrasonic(FRONT_TRIG_PIN, FRONT_ECHO_PIN);
  ultrasonicsensor_data[1] = readUltrasonic(BACK_TRIG_PIN, BACK_ECHO_PIN);
  ultrasonicsensor_data[2] = readUltrasonic(RIGHT_TRIG_PIN, RIGHT_ECHO_PIN);
  ultrasonicsensor_data[3] = readUltrasonic(LEFT_TRIG_PIN, LEFT_ECHO_PIN);
}


float readUltrasonic(int trigPin, int echoPin) {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  return pulseIn(echoPin, HIGH) / 58.0;  
}

void Sonar_Data_Display(int flag) {
  char Sonar_data_display[40];
  if (flag == 0) return;
  else {
    sprintf(Sonar_data_display, "F:%s B:%s R:%s L:%s",
            ultrasonicsensor_data[0] == 0 ? "?" : String(ultrasonicsensor_data[0]).c_str(),
            ultrasonicsensor_data[1] == 0 ? "?" : String(ultrasonicsensor_data[1]).c_str(),
            ultrasonicsensor_data[2] == 0 ? "?" : String(ultrasonicsensor_data[2]).c_str(),
            ultrasonicsensor_data[3] == 0 ? "?" : String(ultrasonicsensor_data[3]).c_str());
    Serial.println(Sonar_data_display);
  }
}

void Robot_Mode_Define() {
  read_ultrasonic_sensor(); 
  
  for (int i = 0; i < SONAR_NUM; i++) {
    if (ultrasonicsensor_data[i] == 0) ultrasonicsensor_data[i] = MAX_DISTANCE;
  }
  Sonar_Data_Display(1); 

  if ((ultrasonicsensor_data[2] >= 15) && (ultrasonicsensor_data[3] >= 15)) {
    mode = 0;
  }

  if ((ultrasonicsensor_data[2] <= 15) && (ultrasonicsensor_data[3] <= 15)) {
    mode = 1;
  }

  if ((ultrasonicsensor_data[3] <= 35) && (ultrasonicsensor_data[2] >= 40)) {
    mode = 2;
  }

  if ((ultrasonicsensor_data[2] <= 35) && (ultrasonicsensor_data[3] >= 40)) {
    mode = 3;
  }
}
